# Turn off access logging
access_log off;

# Deny access to config and log files
location ~* /\.(ht|git) {
  deny all;
}
location ~ \.(log|conf)$ {
  deny all;
}

# Deny access to Akismet PHP files
location ~ ^/wp-content/plugins/akismet/.*\.php {
  deny all;
}

# Deny access to BuddyPress Docs attachments
location /wp-content/uploads/bp-attachments/ {
  rewrite ^.*uploads/bp-attachments/([0-9]+)/(.*) /?p=$1&bp-attachment=$2 permanent;
}

# Cache static assets    
location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
  expires max;
  add_header Pragma public;
  add_header Cache-Control "public, must-revalidate, proxy-revalidate";
}

# Files
rewrite ^/files/(.+) /wp-includes/ms-files.php?file=$1 last;

# Begin cache inquiry
set $cache_uri $request_uri;

# Nginx gzip static module
gzip_static on;

# Do not cache forms or dynamic pages
if ($request_method = POST) {
  set $cache_uri 'null cache';
}
if ($query_string != "") {
  set $cache_uri 'null cache';
}

# Do not cache important resources
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
  set $cache_uri 'null cache';
}

# Do not cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
  set $cache_uri 'null cache';
}

# Serve the cache or pass to WordPress
location / {
  try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?$args;
}
